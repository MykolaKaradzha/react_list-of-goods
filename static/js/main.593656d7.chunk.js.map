{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","visibleGoods","goods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","Classname","onClick","setState","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdG,EArCH,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUD,EACZ,EADYA,WAENI,EAAY,YAAOC,GAiBzB,OAfAD,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAQP,GACN,KAAKL,EAASa,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKZ,EAASe,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAITZ,GACFI,EAAaS,UAGRT,EAgBgBU,CACnBjB,EACA,CAAEI,WAAUD,eAqBd,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAU,iBAAkB,CACrC,WAAYhB,IAAaL,EAASa,WAEpCS,QA3B+B,WACrC,EAAKC,SAAS,CAAElB,SAAUL,EAASa,YAqB/B,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAU,oBAAqB,CACxC,WAAYhB,IAAaL,EAASe,SAEpCO,QAjCyB,WAC/B,EAAKC,SAAS,CAAElB,SAAUL,EAASe,UA2B/B,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAU,oBAAqB,CACxC,YAAajB,IAEfkB,QAhCoB,WAC1B,EAAKC,SAAS,CAAEnB,YAAaA,KA0BzB,sBAUEA,GAAcC,IAAaL,EAASM,OACpC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAhDgB,WACxB,EAAKC,SAAS,CACZlB,SAAUL,EAASM,KACnBF,YAAY,KA0CR,sBAUJ,6BACE,6BACGI,EAAagB,KACZ,SAAAC,GAAI,OAAK,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBA9EhC,GAAyBC,aCvDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.593656d7.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport Classname from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n    const handleSortAlphabeticallyButton = () => {\n      this.setState({ sortType: SortType.ALPHABET });\n    };\n\n    const handleSortByLengthButton = () => {\n      this.setState({ sortType: SortType.LENGTH });\n    };\n\n    const handleResetButton = () => {\n      this.setState({\n        sortType: SortType.NONE,\n        isReversed: false,\n      });\n    };\n\n    const handleReverseButton = () => {\n      this.setState({ isReversed: !isReversed });\n    };\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={Classname('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={handleSortAlphabeticallyButton}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={Classname('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={handleSortByLengthButton}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={Classname('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={handleReverseButton}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleResetButton}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(\n              good => (<li key={good} data-cy=\"Good\">{good}</li>),\n            )}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}