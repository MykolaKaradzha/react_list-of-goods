{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSortButtons","sortBy","setState","handleResetButton","handleReverseButton","this","visibleGoods","goods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","Classname","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,kBAAoB,SAACC,GAAD,OAAsB,WACxC,EAAKC,SAAS,CAAEJ,SAAUG,MAP9B,EAUEE,kBAAoB,WAClB,EAAKD,SAAS,CACZJ,SAAUL,EAASM,KACnBF,YAAY,KAblB,EAiBEO,oBAAsB,WACpB,EAAKF,UAAS,SAAAN,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAlBjD,4CAqBE,WACE,MAGIQ,KAAKT,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAEIQ,EAvDH,SACLC,EADK,GAGJ,IADCT,EACF,EADEA,SAAUD,EACZ,EADYA,WAENS,EAAY,YAAOC,GAiBzB,OAfAD,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAQZ,GACN,KAAKL,EAASkB,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAITjB,GACFS,EAAaS,UAGRT,EAkCgBU,CACnBtB,EACA,CACEI,WACAD,eAIJ,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAU,iBAAkB,CACrC,WAAYrB,IAAaL,EAASkB,WAEpCS,QAASf,KAAKL,kBAAkBP,EAASkB,UAL3C,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAU,oBAAqB,CACxC,WAAYrB,IAAaL,EAASoB,SAEpCO,QAASf,KAAKL,kBAAkBP,EAASoB,QAL3C,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAU,oBAAqB,CACxC,YAAatB,IAEfuB,QAASf,KAAKD,oBALhB,sBAUEP,GAAcC,IAAaL,EAASM,OACpC,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKF,kBAHhB,sBAUJ,6BACGG,EAAae,KACZ,SAAAC,GAAI,OAAK,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eAhF9B,GAAyBC,aCvDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f1a9b876.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport Classname from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortButtons = (sortBy: SortType) => () => {\n    this.setState({ sortType: sortBy });\n  };\n\n  handleResetButton = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  handleReverseButton = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      {\n        sortType,\n        isReversed,\n      },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={Classname('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.handleSortButtons(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={Classname('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.handleSortButtons(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={Classname('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.handleReverseButton}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleResetButton}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(\n            good => (<li key={good} data-cy=\"Good\">{good}</li>),\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}